apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # cert-manager.io/cluster-issuer: 'letsencrypt-prod' # https
    # nginx.ingress.kubernetes.io/ssl-redirect: 'true' # https
spec:
  # tls: # https
  #   - hosts:
  #       - 'leetwithfriend.com'
  #       - 'www.leetwithfriend.com'
  #     secretName: 'leetwithfriend-tls'
  rules:
    # - host: 'leetwithfriend.com' # https
    #   http:
    #     paths:
    #       - path: /?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: frontend-cluster-ip-service
    #             port:
    #               number: 3000
    #       - path: /api/v1/user?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: user-cluster-ip-service
    #             port:
    #               number: 8000
    #       - path: /api/v1/matching?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: matching-cluster-ip-service
    #             port:
    #               number: 8001
    #       - path: /api/v1/question?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: question-cluster-ip-service
    #             port:
    #               number: 8500
    #       - path: /socket.io?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: matching-cluster-ip-service
    #             port:
    #               number: 8001
    # - host: 'www.leetwithfriend.com' # https
    #   http:
    #     paths:
    #       - path: /?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: frontend-cluster-ip-service
    #             port:
    #               number: 3000
    #       - path: /api/v1/user?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: user-cluster-ip-service
    #             port:
    #               number: 8000
    #       - path: /api/v1/matching?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: matching-cluster-ip-service
    #             port:
    #               number: 8001
    #       - path: /api/v1/question?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: question-cluster-ip-service
    #             port:
    #               number: 8500
    #       - path: /socket.io?(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: matching-cluster-ip-service
    #             port:
    #               number: 8001
    - http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend-cluster-ip-service
                port:
                  number: 3000
          - path: /api/v1/user?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-cluster-ip-service
                port:
                  number: 8000
          - path: /api/v1/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
          - path: /api/v1/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /api/v1/question?(.*)
            pathType: Prefix
            backend:
              service:
                name: question-cluster-ip-service
                port:
                  number: 8500
          - path: /socket.io/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /socket.io/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
