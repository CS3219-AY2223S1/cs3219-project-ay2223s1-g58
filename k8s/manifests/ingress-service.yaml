apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: 'true'
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls: # https
    - hosts:
        - leetwithfriend.com
        - www.leetwithfriend.com
      secretName: leetwithfriend-com
  rules:
    - host: 'leetwithfriend.com' # https
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend-cluster-ip-service
                port:
                  number: 3000
          - path: /api/v1/user?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-cluster-ip-service
                port:
                  number: 8000
          - path: /api/v1/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
          - path: /api/v1/question?(.*)
            pathType: Prefix
            backend:
              service:
                name: question-cluster-ip-service
                port:
                  number: 8500
          - path: /socket.io/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /socket.io/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
          - path: /api/v1/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /api/v1/history?(.*)
            pathType: Prefix
            backend:
              service:
                name: history-cluster-ip-service
                port:
                  number: 8080
          - path: /myapp/peerjs?(.*)
            pathType: Prefix
            backend:
              service:
                name: peerjs-cluster-ip-service
                port:
                  number: 9000
    - host: 'www.leetwithfriend.com' # https
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend-cluster-ip-service
                port:
                  number: 3000
          - path: /api/v1/user?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-cluster-ip-service
                port:
                  number: 8000
          - path: /api/v1/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
          - path: /api/v1/question?(.*)
            pathType: Prefix
            backend:
              service:
                name: question-cluster-ip-service
                port:
                  number: 8500
          - path: /socket.io/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /socket.io/matching?(.*)
            pathType: Prefix
            backend:
              service:
                name: matching-cluster-ip-service
                port:
                  number: 8001
          - path: /api/v1/room?(.*)
            pathType: Prefix
            backend:
              service:
                name: room-cluster-ip-service
                port:
                  number: 8022
          - path: /api/v1/history?(.*)
            pathType: Prefix
            backend:
              service:
                name: history-cluster-ip-service
                port:
                  number: 8080
          - path: /myapp/peerjs?(.*)
            pathType: Prefix
            backend:
              service:
                name: peerjs-cluster-ip-service
                port:
                  number: 9000
